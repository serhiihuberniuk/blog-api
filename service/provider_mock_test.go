// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/serhiihuberniuk/blog-api/service (interfaces: CurrentUserInformationProvider)

// Package service is a generated GoMock package.
package service

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCurrentUserInformationProvider is a mock of CurrentUserInformationProvider interface.
type MockCurrentUserInformationProvider struct {
	ctrl     *gomock.Controller
	recorder *MockCurrentUserInformationProviderMockRecorder
}

// MockCurrentUserInformationProviderMockRecorder is the mock recorder for MockCurrentUserInformationProvider.
type MockCurrentUserInformationProviderMockRecorder struct {
	mock *MockCurrentUserInformationProvider
}

// NewMockCurrentUserInformationProvider creates a new mock instance.
func NewMockCurrentUserInformationProvider(ctrl *gomock.Controller) *MockCurrentUserInformationProvider {
	mock := &MockCurrentUserInformationProvider{ctrl: ctrl}
	mock.recorder = &MockCurrentUserInformationProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCurrentUserInformationProvider) EXPECT() *MockCurrentUserInformationProviderMockRecorder {
	return m.recorder
}

// GetCurrentUserID mocks base method.
func (m *MockCurrentUserInformationProvider) GetCurrentUserID(arg0 context.Context) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrentUserID", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetCurrentUserID indicates an expected call of GetCurrentUserID.
func (mr *MockCurrentUserInformationProviderMockRecorder) GetCurrentUserID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrentUserID", reflect.TypeOf((*MockCurrentUserInformationProvider)(nil).GetCurrentUserID), arg0)
}
